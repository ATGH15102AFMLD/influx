// automatically generated by the FlatBuffers compiler, do not modify

import { RoutineBytecodeBundle, RoutineBytecodeBundleT } from '../fx/routine-bytecode-bundle';
import { RoutineGLSLBundle, RoutineGLSLBundleT } from '../fx/routine-g-l-s-l-bundle';


export enum RoutineBundle{
  NONE = 0,
  RoutineBytecodeBundle = 1,
  RoutineGLSLBundle = 2
}

export function unionToRoutineBundle(
  type: RoutineBundle,
  accessor: (obj:RoutineBytecodeBundle|RoutineGLSLBundle) => RoutineBytecodeBundle|RoutineGLSLBundle|null
): RoutineBytecodeBundle|RoutineGLSLBundle|null {
  switch(RoutineBundle[type]) {
    case 'NONE': return null; 
    case 'RoutineBytecodeBundle': return accessor(new RoutineBytecodeBundle())! as RoutineBytecodeBundle;
    case 'RoutineGLSLBundle': return accessor(new RoutineGLSLBundle())! as RoutineGLSLBundle;
    default: return null;
  }
}

export function unionListToRoutineBundle(
  type: RoutineBundle, 
  accessor: (index: number, obj:RoutineBytecodeBundle|RoutineGLSLBundle) => RoutineBytecodeBundle|RoutineGLSLBundle|null, 
  index: number
): RoutineBytecodeBundle|RoutineGLSLBundle|null {
  switch(RoutineBundle[type]) {
    case 'NONE': return null; 
    case 'RoutineBytecodeBundle': return accessor(index, new RoutineBytecodeBundle())! as RoutineBytecodeBundle;
    case 'RoutineGLSLBundle': return accessor(index, new RoutineGLSLBundle())! as RoutineGLSLBundle;
    default: return null;
  }
}

