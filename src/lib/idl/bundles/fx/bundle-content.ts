// automatically generated by the FlatBuffers compiler, do not modify

import { PartBundle, PartBundleT } from '../fx/part-bundle';


export enum BundleContent{
  NONE = 0,
  PartBundle = 1
}

export function unionToBundleContent(
  type: BundleContent,
  accessor: (obj:PartBundle) => PartBundle|null
): PartBundle|null {
  switch(BundleContent[type]) {
    case 'NONE': return null; 
    case 'PartBundle': return accessor(new PartBundle())! as PartBundle;
    default: return null;
  }
}

export function unionListToBundleContent(
  type: BundleContent, 
  accessor: (index: number, obj:PartBundle) => PartBundle|null, 
  index: number
): PartBundle|null {
  switch(BundleContent[type]) {
    case 'NONE': return null; 
    case 'PartBundle': return accessor(index, new PartBundle())! as PartBundle;
    default: return null;
  }
}

